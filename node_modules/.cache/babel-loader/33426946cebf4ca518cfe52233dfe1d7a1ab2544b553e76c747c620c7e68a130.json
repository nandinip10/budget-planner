{"ast":null,"code":"var _jsxFileName = \"/home/nandini/budget-app/src/components/AddExpenseModal.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { Form, Modal, Button } from \"react-bootstrap\";\nimport { useBudgets } from \"../contexts/BudgetsContexts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddExpenseModal(_ref) {\n  _s();\n  let {\n    show,\n    handleClose,\n    defaultBudgetId\n  } = _ref;\n  const descriptionRef = useRef();\n  const amountRef = useRef();\n  const budgetIdRef = useRef();\n  const {\n    addExpense,\n    budgets\n  } = useBudgets(); //custom hook\n\n  const handleSubmit = e => {\n    addExpense({\n      description: descriptionRef.current.value,\n      amount: parseFloat(amountRef.current.value),\n      budgetId: budgetIdRef.current.value\n    });\n    handleClose();\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"New Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            ref: descriptionRef,\n            type: \"text\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"amount\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            ref: budgetIdRef,\n            type: \"number\",\n            min: 0,\n            step: 0.01,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"budgetId\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            defaultValue: defaultBudgetId,\n            ref: budgetIdRef,\n            children: budgets.map(budget => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: budget.id,\n                children: budget.name\n              }, budget.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(AddExpenseModal, \"JM4E1WYUOd9CiG/Emdwddeg7mRw=\", false, function () {\n  return [useBudgets];\n});\n_c = AddExpenseModal;\nvar _c;\n$RefreshReg$(_c, \"AddExpenseModal\");","map":{"version":3,"names":["React","useRef","Form","Modal","Button","useBudgets","AddExpenseModal","show","handleClose","defaultBudgetId","descriptionRef","amountRef","budgetIdRef","addExpense","budgets","handleSubmit","e","description","current","value","amount","parseFloat","budgetId","map","budget","id","name"],"sources":["/home/nandini/budget-app/src/components/AddExpenseModal.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { Form, Modal, Button } from \"react-bootstrap\";\nimport { useBudgets } from \"../contexts/BudgetsContexts\";\n\nexport default function AddExpenseModal({\n  show,\n  handleClose,\n  defaultBudgetId,\n}) {\n  const descriptionRef = useRef();\n  const amountRef = useRef();\n  const budgetIdRef = useRef();\n  const { addExpense, budgets } = useBudgets(); //custom hook\n\n  const handleSubmit = (e) => {\n    addExpense({\n      description: descriptionRef.current.value,\n      amount: parseFloat(amountRef.current.value),\n      budgetId: budgetIdRef.current.value,\n    });\n    handleClose();\n  };\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Form onSubmit={handleSubmit}>\n        <Modal.Header closeButton>\n          <Modal.Title>New Expense</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group controlId=\"description\" className=\"mb-3\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control ref={descriptionRef} type=\"text\" required />\n          </Form.Group>\n\n          <Form.Group controlId=\"amount\" className=\"mb-3\">\n            <Form.Label>Amount</Form.Label>\n            <Form.Control\n              ref={budgetIdRef}\n              type=\"number\"\n              min={0}\n              step={0.01}\n              required\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"budgetId\" className=\"mb-3\">\n            <Form.Label>Budget</Form.Label>\n            <Form.Select defaultValue={defaultBudgetId} ref={budgetIdRef}>\n              {budgets.map((budget) => {\n                return (\n                  <option key={budget.id} value={budget.id}>\n                    {budget.name}\n                  </option>\n                );\n              })}\n            </Form.Select>\n          </Form.Group>\n\n          <div className=\"d-flex justify-content-end\">\n            <Button variant=\"primary\" type=\"submit\">\n              Add\n            </Button>\n          </div>\n        </Modal.Body>\n      </Form>\n    </Modal>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}