{"ast":null,"code":"var _jsxFileName = \"/home/nandini/budget-app/src/components/BudgetCard.js\";\nimport React from \"react\";\nimport { Card, ProgressBar, Button, Stack } from \"react-bootstrap\";\nimport { currencyFormatter } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetCard = _ref => {\n  let {\n    name,\n    amount,\n    max,\n    grey,\n    onAddExpenseClick,\n    hideButtons,\n    onViewExpenseClick\n  } = _ref;\n  const classNames = [];\n  if (amount > max) {\n    classNames.push(\"bg-danger\", \"bg-opacity-10\");\n  } else if (grey) {\n    classNames.push(\"bg-light\");\n  }\n  const getProgressBarVariant = (amount, max) => {\n    const ratio = amount / max;\n    if (ratio < 0.5) return \"primary\";\n    if (ratio < 0.75) return \"warning\";else return \"danger\";\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classNames.join(\" \"),\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        className: \"d-flex justify-content-between align-items-baseline fw-normal mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"me-2\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-baseline\",\n          children: [currencyFormatter.format(amount), max && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted fs-6 ms-1\",\n            children: [\"/ \", currencyFormatter.format(max)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), max && /*#__PURE__*/_jsxDEV(ProgressBar, {\n        className: \"rounded-pill\",\n        variant: getProgressBarVariant(amount, max),\n        min: 0,\n        max: max,\n        now: amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), !hideButtons && /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"horizontal\",\n        gap: \"2\",\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          className: \"ms-auto\",\n          onClick: onAddExpenseClick,\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          onClick: onViewExpenseClick,\n          children: \"View Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = BudgetCard;\nexport default BudgetCard;\nvar _c;\n$RefreshReg$(_c, \"BudgetCard\");","map":{"version":3,"names":["React","Card","ProgressBar","Button","Stack","currencyFormatter","BudgetCard","name","amount","max","grey","onAddExpenseClick","hideButtons","onViewExpenseClick","classNames","push","getProgressBarVariant","ratio","join","format"],"sources":["/home/nandini/budget-app/src/components/BudgetCard.js"],"sourcesContent":["import React from \"react\";\nimport { Card, ProgressBar, Button, Stack } from \"react-bootstrap\";\nimport { currencyFormatter } from \"../utils\";\n\nconst BudgetCard = ({\n  name,\n  amount,\n  max,\n  grey,\n  onAddExpenseClick,\n  hideButtons,\n  onViewExpenseClick,\n}) => {\n  const classNames = [];\n  if (amount > max) {\n    classNames.push(\"bg-danger\", \"bg-opacity-10\");\n  } else if (grey) {\n    classNames.push(\"bg-light\");\n  }\n\n  const getProgressBarVariant = (amount, max) => {\n    const ratio = amount / max;\n    if (ratio < 0.5) return \"primary\";\n    if (ratio < 0.75) return \"warning\";\n    else return \"danger\";\n  };\n\n  return (\n    <Card className={classNames.join(\" \")}>\n      <Card.Body>\n        <Card.Title className=\"d-flex justify-content-between align-items-baseline fw-normal mb-3\">\n          <div className=\"me-2\">{name}</div>\n          <div className=\"d-flex align-items-baseline\">\n            {currencyFormatter.format(amount)}\n            {max && (\n              <span className=\"text-muted fs-6 ms-1\">\n                / {currencyFormatter.format(max)}\n              </span>\n            )}\n          </div>\n        </Card.Title>\n        {max && (\n          <ProgressBar\n            className=\"rounded-pill\"\n            variant={getProgressBarVariant(amount, max)}\n            min={0}\n            max={max}\n            now={amount}\n          />\n        )}\n        {!hideButtons && (\n          <Stack direction=\"horizontal\" gap=\"2\" className=\"mt-4\">\n            <Button\n              variant=\"outline-primary\"\n              className=\"ms-auto\"\n              onClick={onAddExpenseClick}\n            >\n              Add Expense\n            </Button>\n            <Button variant=\"outline-secondary\" onClick={onViewExpenseClick}>\n              View Expenses\n            </Button>\n          </Stack>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default BudgetCard;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,EAAEC,MAAM,EAAEC,KAAK,QAAQ,iBAAiB;AAClE,SAASC,iBAAiB,QAAQ,UAAU;AAAC;AAE7C,MAAMC,UAAU,GAAG,QAQb;EAAA,IARc;IAClBC,IAAI;IACJC,MAAM;IACNC,GAAG;IACHC,IAAI;IACJC,iBAAiB;IACjBC,WAAW;IACXC;EACF,CAAC;EACC,MAAMC,UAAU,GAAG,EAAE;EACrB,IAAIN,MAAM,GAAGC,GAAG,EAAE;IAChBK,UAAU,CAACC,IAAI,CAAC,WAAW,EAAE,eAAe,CAAC;EAC/C,CAAC,MAAM,IAAIL,IAAI,EAAE;IACfI,UAAU,CAACC,IAAI,CAAC,UAAU,CAAC;EAC7B;EAEA,MAAMC,qBAAqB,GAAG,CAACR,MAAM,EAAEC,GAAG,KAAK;IAC7C,MAAMQ,KAAK,GAAGT,MAAM,GAAGC,GAAG;IAC1B,IAAIQ,KAAK,GAAG,GAAG,EAAE,OAAO,SAAS;IACjC,IAAIA,KAAK,GAAG,IAAI,EAAE,OAAO,SAAS,CAAC,KAC9B,OAAO,QAAQ;EACtB,CAAC;EAED,oBACE,QAAC,IAAI;IAAC,SAAS,EAAEH,UAAU,CAACI,IAAI,CAAC,GAAG,CAAE;IAAA,uBACpC,QAAC,IAAI,CAAC,IAAI;MAAA,wBACR,QAAC,IAAI,CAAC,KAAK;QAAC,SAAS,EAAC,oEAAoE;QAAA,wBACxF;UAAK,SAAS,EAAC,MAAM;UAAA,UAAEX;QAAI;UAAA;UAAA;UAAA;QAAA,QAAO,eAClC;UAAK,SAAS,EAAC,6BAA6B;UAAA,WACzCF,iBAAiB,CAACc,MAAM,CAACX,MAAM,CAAC,EAChCC,GAAG,iBACF;YAAM,SAAS,EAAC,sBAAsB;YAAA,WAAC,IACnC,EAACJ,iBAAiB,CAACc,MAAM,CAACV,GAAG,CAAC;UAAA;YAAA;YAAA;YAAA;UAAA,QAEnC;QAAA;UAAA;UAAA;UAAA;QAAA,QACG;MAAA;QAAA;QAAA;QAAA;MAAA,QACK,EACZA,GAAG,iBACF,QAAC,WAAW;QACV,SAAS,EAAC,cAAc;QACxB,OAAO,EAAEO,qBAAqB,CAACR,MAAM,EAAEC,GAAG,CAAE;QAC5C,GAAG,EAAE,CAAE;QACP,GAAG,EAAEA,GAAI;QACT,GAAG,EAAED;MAAO;QAAA;QAAA;QAAA;MAAA,QAEf,EACA,CAACI,WAAW,iBACX,QAAC,KAAK;QAAC,SAAS,EAAC,YAAY;QAAC,GAAG,EAAC,GAAG;QAAC,SAAS,EAAC,MAAM;QAAA,wBACpD,QAAC,MAAM;UACL,OAAO,EAAC,iBAAiB;UACzB,SAAS,EAAC,SAAS;UACnB,OAAO,EAAED,iBAAkB;UAAA,UAC5B;QAED;UAAA;UAAA;UAAA;QAAA,QAAS,eACT,QAAC,MAAM;UAAC,OAAO,EAAC,mBAAmB;UAAC,OAAO,EAAEE,kBAAmB;UAAA,UAAC;QAEjE;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QAEZ;IAAA;MAAA;MAAA;MAAA;IAAA;EACS;IAAA;IAAA;IAAA;EAAA,QACP;AAEX,CAAC;AAAC,KA/DIP,UAAU;AAiEhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}